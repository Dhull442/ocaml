# 18 "a2.mll"
 
  type token =
     INT of int          (* integer constant, positive or negative w/o leading zeros *)
  |  TRUE                (* boolean constant "T" *)
  |  FALSE               (* boolean constant "F" *)
  |  ABS                 (* unary operator, "abs" *)
  |  PLUS                (* arithmetic plus, "+" *)
  |  MINUS               (* arithmetic minus, "-" *)
  |  MUL                 (* arithmetic multiply, "*" *)
  |  DIV                 (* integer div, "div" *)
  |  MOD                 (* remainder, "mod" *)
  |  EXP                 (* exponentiation, "^" *)
  |  LP                  (* left paren, "(" *)
  |  RP                  (* right paren, ")" *)
  |  NOT                 (* boolean NOT, "not" *)
  |  AND                 (* boolean AND, "/\ " *)
  |  OR                  (* boolean OR, "\/" *)
  |  EQ                  (* equal to, "=" *)
  |  GTA                 (* greater than, ">" *)
  |  LTA                 (* less than, "<" *)
  |  GEQ                 (* greater than/equal to, ">=" *)
  |  LEQ                 (* less than/equal to, "<=" *)
  |  IF                  (* keyword "if" *)
  |  THEN                (* keyword "then" *)
  |  ELSE                (* keyword "else" *)
  |  ID of string        (* variable identifier, alphanumeric string with first char lowercase *)
  |  DEF                 (* definition construct, "def" *)
  |  DELIMITER;;         (* delimiter, ";" *)
  exception InvalidToken of char;;

# 33 "a2.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\229\255\230\255\026\000\101\000\244\255\245\255\127\000\
    \241\000\253\255\254\255\012\000\255\255\037\000\051\000\056\000\
    \059\000\010\000\012\000\001\000\000\000\003\000\051\000\002\000\
    \052\000\063\000\003\000\004\000\005\000\067\000\006\001\051\000\
    \006\000\007\000\014\000\158\000\067\000\052\000\162\000\163\000\
    \164\000\165\000\085\000\242\000\243\000\244\000\070\000\245\000\
    \246\000\248\000\249\000\250\000\253\000\255\000\001\001\002\001\
    \003\001\004\001\005\001\007\001\031\001\032\001\086\000\078\000\
    \033\001\041\001\074\000\090\000\043\001\046\001\075\001\101\001\
    \176\001\034\002";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\023\000\023\000\255\255\255\255\023\000\
    \026\000\255\255\255\255\000\000\255\255\026\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \003\000\004\000\005\000\006\000\255\255\255\255\255\255\007\000\
    \255\255\024\000\255\255\255\255\008\000\009\000\255\255\255\255\
    \012\000\255\255\013\000\255\255\014\000\015\000\255\255\016\000\
    \018\000\255\255\017\000\019\000\255\255\020\000\255\255\255\255\
    \255\255\021\000\255\255\255\255\255\255\022\000\023\000\003\000\
    \023\000\023\000";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\000\000\000\000\255\255\
    \255\255\000\000\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\008\000\053\000\045\000\035\000\034\000\033\000\032\000\
    \033\000\000\000\000\000\058\000\000\000\055\000\000\000\034\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \008\000\053\000\045\000\035\000\034\000\033\000\032\000\033\000\
    \006\000\005\000\058\000\013\000\055\000\013\000\034\000\051\000\
    \012\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\000\000\002\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\009\000\057\000\
    \000\000\054\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\010\000\012\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\049\000\
    \000\000\007\000\003\000\003\000\004\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\066\000\
    \062\000\060\000\046\000\042\000\036\000\031\000\032\000\035\000\
    \037\000\040\000\038\000\039\000\039\000\041\000\041\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\043\000\047\000\063\000\064\000\067\000\035\000\068\000\
    \000\000\000\000\039\000\039\000\041\000\041\000\003\000\003\000\
    \003\000\003\000\072\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\070\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\030\000\044\000\044\000\045\000\048\000\048\000\
    \255\255\050\000\050\000\052\000\000\000\000\000\052\000\000\000\
    \053\000\000\000\056\000\055\000\056\000\059\000\058\000\030\000\
    \059\000\030\000\044\000\044\000\045\000\048\000\048\000\000\000\
    \050\000\050\000\052\000\026\000\028\000\052\000\027\000\053\000\
    \021\000\056\000\055\000\056\000\059\000\058\000\030\000\059\000\
    \061\000\061\000\065\000\000\000\000\000\017\000\019\000\018\000\
    \026\000\028\000\065\000\027\000\069\000\021\000\000\000\069\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\061\000\
    \061\000\065\000\017\000\019\000\018\000\000\000\000\000\000\000\
    \000\000\065\000\000\000\069\000\000\000\020\000\069\000\023\000\
    \000\000\000\000\029\000\000\000\000\000\025\000\014\000\000\000\
    \000\000\000\000\016\000\000\000\000\000\000\000\024\000\022\000\
    \000\000\000\000\020\000\000\000\023\000\015\000\000\000\029\000\
    \000\000\000\000\025\000\014\000\000\000\000\000\032\000\016\000\
    \000\000\000\000\000\000\024\000\022\000\000\000\000\000\000\000\
    \000\000\000\000\015\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\032\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\071\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\073\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\041\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\041\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\019\000\023\000\026\000\027\000\028\000\032\000\
    \033\000\255\255\255\255\017\000\255\255\018\000\255\255\034\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\019\000\023\000\026\000\027\000\028\000\032\000\033\000\
    \000\000\000\000\017\000\000\000\018\000\000\000\034\000\020\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\000\000\017\000\
    \255\255\018\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\021\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\014\000\
    \015\000\016\000\022\000\024\000\025\000\029\000\031\000\035\000\
    \025\000\036\000\037\000\038\000\039\000\040\000\041\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\042\000\046\000\062\000\063\000\066\000\035\000\067\000\
    \255\255\255\255\038\000\039\000\040\000\041\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\008\000\043\000\044\000\045\000\047\000\048\000\
    \000\000\049\000\050\000\051\000\255\255\255\255\052\000\255\255\
    \053\000\255\255\054\000\055\000\056\000\057\000\058\000\030\000\
    \059\000\008\000\043\000\044\000\045\000\047\000\048\000\255\255\
    \049\000\050\000\051\000\008\000\008\000\052\000\008\000\053\000\
    \008\000\054\000\055\000\056\000\057\000\058\000\030\000\059\000\
    \060\000\061\000\064\000\255\255\255\255\008\000\008\000\008\000\
    \030\000\030\000\065\000\030\000\068\000\030\000\255\255\069\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\060\000\
    \061\000\064\000\030\000\030\000\030\000\255\255\255\255\255\255\
    \255\255\065\000\255\255\068\000\255\255\008\000\069\000\008\000\
    \255\255\255\255\008\000\255\255\255\255\008\000\008\000\255\255\
    \255\255\255\255\008\000\255\255\255\255\255\255\008\000\008\000\
    \255\255\255\255\030\000\255\255\030\000\008\000\255\255\030\000\
    \255\255\255\255\030\000\030\000\255\255\255\255\071\000\030\000\
    \255\255\255\255\255\255\030\000\030\000\255\255\255\255\255\255\
    \255\255\255\255\030\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\071\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\071\000\071\000\071\000\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\071\000\071\000\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\073\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\073\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec read lexbuf =
    __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 83 "a2.mll"
            n
# 294 "a2.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 83 "a2.mll"
               ([ INT (int_of_string n) ] @ (read (push_curr_p lexbuf)))
# 298 "a2.ml"

  | 1 ->
# 84 "a2.mll"
        ([ TRUE ])
# 303 "a2.ml"

  | 2 ->
# 85 "a2.mll"
        ([ FALSE ])
# 308 "a2.ml"

  | 3 ->
# 86 "a2.mll"
                              ([ABS])
# 313 "a2.ml"

  | 4 ->
# 87 "a2.mll"
                            ([ PLUS ])
# 318 "a2.ml"

  | 5 ->
# 88 "a2.mll"
                            ([ MINUS ])
# 323 "a2.ml"

  | 6 ->
# 89 "a2.mll"
                            ([MUL])
# 328 "a2.ml"

  | 7 ->
# 90 "a2.mll"
                                  ([DIV])
# 333 "a2.ml"

  | 8 ->
# 91 "a2.mll"
                                  ([MOD])
# 338 "a2.ml"

  | 9 ->
# 92 "a2.mll"
                            ([EXP])
# 343 "a2.ml"

  | 10 ->
# 93 "a2.mll"
          ([ LP ])
# 348 "a2.ml"

  | 11 ->
# 94 "a2.mll"
         ( [ RP ])
# 353 "a2.ml"

  | 12 ->
# 95 "a2.mll"
                                  ([NOT])
# 358 "a2.ml"

  | 13 ->
# 96 "a2.mll"
                                   ([ AND ])
# 363 "a2.ml"

  | 14 ->
# 97 "a2.mll"
                                  ( [ OR ])
# 368 "a2.ml"

  | 15 ->
# 98 "a2.mll"
                            ([EQ])
# 373 "a2.ml"

  | 16 ->
# 99 "a2.mll"
                            ([GTA])
# 378 "a2.ml"

  | 17 ->
# 100 "a2.mll"
                            ([LTA])
# 383 "a2.ml"

  | 18 ->
# 101 "a2.mll"
                               ([GEQ])
# 388 "a2.ml"

  | 19 ->
# 102 "a2.mll"
                               ([LEQ])
# 393 "a2.ml"

  | 20 ->
# 103 "a2.mll"
                               ([IF])
# 398 "a2.ml"

  | 21 ->
# 104 "a2.mll"
                                     ([THEN])
# 403 "a2.ml"

  | 22 ->
# 105 "a2.mll"
                                     ([ELSE])
# 408 "a2.ml"

  | 23 ->
let
# 106 "a2.mll"
               s
# 414 "a2.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 106 "a2.mll"
                   ([ ID s ])
# 418 "a2.ml"

  | 24 ->
# 107 "a2.mll"
                                   ([DEF])
# 423 "a2.ml"

  | 25 ->
# 108 "a2.mll"
      ([DELIMITER])
# 428 "a2.ml"

  | 26 ->
let
# 109 "a2.mll"
       invalid
# 434 "a2.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 109 "a2.mll"
               (raise (InvalidToken invalid))
# 438 "a2.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

;;

# 120 "a2.mll"
 
  let lexme s = read (Lexing.from_string s)

# 449 "a2.ml"
