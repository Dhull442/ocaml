### Starting build.
# Target: a0.mli.depends, tags: { extension:mli, file:a0.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules a0.mli > a0.mli.depends
# Target: a0.cmi, tags: { byte, compile, extension:mli, file:a0.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -o a0.cmi a0.mli
# Target: a0.ml.depends, tags: { extension:ml, file:a0.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules a0.ml > a0.ml.depends
# Target: a0.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:a0.cmo, file:a0.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o a0.cmo a0.ml
# Target: a1.mli.depends, tags: { extension:mli, file:a1.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules a1.mli > a1.mli.depends
# Target: a1.cmi, tags: { byte, compile, extension:mli, file:a1.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -o a1.cmi a1.mli
# Target: a1.ml.depends, tags: { extension:ml, file:a1.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules a1.ml > a1.ml.depends
# Target: a1.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:a1.cmo, file:a1.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o a1.cmo a1.ml
+ /usr/bin/ocamlc -c -o a1.cmo a1.ml
File "a1.ml", line 1:
Error: The implementation a1.ml does not match the interface a1.cmi:
       Type declarations do not match:
         type answer = Num of A0.bigint | Bool of bool
       is not included in
         type answer =
             Num of A0.bigint
           | Bool of bool
           | Tup of int * answer list
       File "a1.ml", line 5, characters 0-42: Actual declaration
       The field Tup is only present in the second declaration.
Command exited with code 2.
# Compilation unsuccessful.
